openapi: '3.0.3'
info:
  title: GOVSSO Session Service
  version: 0.1.0
servers:
  - url: http://localhost:14080
paths:
  /login/init:
    get:
      summary: Login provider for Ory Hydra.
      operationId: loginInit
      parameters:
        - in: query
          name: login_challenge
          description: ID of Ory Hydra's login request.
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{32}$'
            minLength: 32
            maxLength: 32
            example: '824113da6da44889943b98715a06d699'
      responses:
        '200':
          description: Existing session exists. Ask user to continue existing session, reauthenticate, or return to service provider.
          headers:
            Set-Cookie:
              description: Session cookie.
              schema:
                type: string
              example: SESSION=Nzc5ODFlZTktODhhNS00ZTEwLTk0NWQtN2EzNTU5N2E2MmY5; Path=/; HttpOnly; SameSite=Lax
          content:
            text/html:
              schema:
                type: string
                example: HTML page view.
        '302':
          description: Existing session doesn't exist. Redirect to TARA for authentication.
          headers:
            Set-Cookie:
              description: Session cookie.
              schema:
                type: string
              example: SESSION=Nzc5ODFlZTktODhhNS00ZTEwLTk0NWQtN2EzNTU5N2E2MmY5; Path=/; HttpOnly; SameSite=Lax
            Location:
              description: TARA authentication request.
              schema:
                type: string
                format: uri
              example: scope=openid&response_type=code&redirect_uri=http%3A%2F%2Flocalhost:14080%2Fauth%2Ftaracallback&state=1CdQPV8h6Oej8czeP2GJiqLOkUR70yIPlTNd16DBwGM&nonce=O15XCSiGW2FMeU0u9nN0kNEnwY9mfO7xOm-9wV5KQpI&client_id=govsso
        '400':
          description: User error (invalid request etc).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
  /login/continuesession:
    post:
      summary: Continue existing session.
      operationId: loginContinueSession
      parameters:
        - in: cookie
          name: SESSION
          description: Session cookie.
          required: true
          schema:
            type: string
            pattern: '^[A-Za-z0-9]{48}$'
            minLength: 48
            maxLength: 48
            example: Nzc5ODFlZTktODhhNS00ZTEwLTk0NWQtN2EzNTU5N2E2MmY5
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              #properties:
              #  _csrf:
              #    description: CSRF token.
              #    type: string
              #    pattern: '^[a-z0-9\-]{36}$'
              #    minLength: 36
              #    maxLength: 36
              #    example: 'c316e550-23e3-4fee-8cee-f8079a630fba'
      responses:
        '302':
          description: Session continued successfully, redirect to Ory Hydra for accepting login request.
          headers:
            Location:
              description: Ory Hydra accept login request.
              schema:
                type: string
                format: uri
              example: http://localhost:13080/oidc/authorize?client_id=client-a&login_verifier=824113da6da44889943b98715a06d699&redirect_uri=https%3A%2F%2Flocalhost:11443%2Foauth%2Fresponse&response_type=code&scope=openid&state=I00ORQdhpLdhZVa5mliUexwkWFevHV0Z8Xuh7gaps0E%3D
        '400':
          description: User error (invalid request etc).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
  /login/reauthenticate:
    post:
      summary: End existing session and redirect to initial authentication request.
      operationId: loginReauthenticate
      parameters:
        - in: cookie
          name: SESSION
          description: Session cookie.
          required: true
          schema:
            type: string
            pattern: '^[A-Za-z0-9]{48}$'
            minLength: 48
            maxLength: 48
            example: Nzc5ODFlZTktODhhNS00ZTEwLTk0NWQtN2EzNTU5N2E2MmY5
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              #properties:
              #  _csrf:
              #    description: CSRF token.
              #    type: string
              #    pattern: '^[a-z0-9\-]{36}$'
              #    minLength: 36
              #    maxLength: 36
              #    example: 'c316e550-23e3-4fee-8cee-f8079a630fba'
      responses:
        '302':
          description: Logout completed successfully, redirect to initial authentication request.
          headers:
            Location:
              description: TODO
              schema:
                type: string
                format: uri
              example: TODO
        '400':
          description: User error (invalid request etc).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
  /login/taracallback:
    get:
      summary: TARA authentication completed, request ID token from TARA.
      operationId: loginTaraCallback
      parameters:
        - in: cookie
          name: SESSION
          description: Session cookie.
          required: true
          schema:
            type: string
            pattern: '^[A-Za-z0-9]{48}$'
            minLength: 48
            maxLength: 48
            example: Nzc5ODFlZTktODhhNS00ZTEwLTk0NWQtN2EzNTU5N2E2MmY5
        - in: query
          name: code
          description: Authorization code to use for requesting ID token from TARA.
          required: true
          schema:
            type: string
            pattern: '^[A-Za-z0-9\-_.]{87}$'
            minLength: 87
            maxLength: 87
            example: gSVzQ6iWTLWDtD1f7_QZdHNweXzrraQYdys_MWoRK-A.nQ2epEBSzxo_n-P6hQt_I_HvusERdqkGaC31TrjSIlU
        - in: query
          name: state
          description: Security code against false request attacks.
          required: true
          schema:
            type: string
            pattern: '^[A-Za-z0-9\-_]{43}$'
            minLength: 43
            maxLength: 43
            example: 1CdQPV8h6Oej8czeP2GJiqLOkUR70yIPlTNd16DBwGM
      responses:
        '302':
          description: ID token from TARA obtained successfully, redirect to Ory Hydra for accepting login request.
          headers:
            Location:
              description: Ory Hydra accept login request.
              schema:
                type: string
                format: uri
              example: http://localhost:13080/oidc/authorize?client_id=client-a&login_verifier=824113da6da44889943b98715a06d699&redirect_uri=https%3A%2F%2Flocalhost:11443%2Foauth%2Fresponse&response_type=code&scope=openid&state=I00ORQdhpLdhZVa5mliUexwkWFevHV0Z8Xuh7gaps0E%3D
        '400':
          description: User error (invalid request etc).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
  /consent/init:
    get:
      summary: Consent provider for Ory Hydra.
      operationId: consentInit
      parameters:
        - in: cookie
          name: SESSION
          description: Session cookie.
          required: true
          schema:
            type: string
            pattern: '^[A-Za-z0-9]{48}$'
            minLength: 48
            maxLength: 48
            example: Nzc5ODFlZTktODhhNS00ZTEwLTk0NWQtN2EzNTU5N2E2MmY5
        - in: query
          name: consent_challenge
          description: ID of Ory Hydra's consent request.
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{32}$'
            minLength: 32
            maxLength: 32
            example: '01a9d709fb014160b4f1016bf7868574'
      responses:
        '302':
          description: Redirect to Ory Hydra for accepting consent request.
          headers:
            Location:
              description: Ory Hydra accept consent request.
              schema:
                type: string
                format: uri
              example: http://localhost:13080/oidc/authorize?client_id=client-a&consent_verifier=01a9d709fb014160b4f1016bf7868574&redirect_uri=https%3A%2F%2Flocalhost:11443%2Foauth%2Fresponse&response_type=code&scope=openid&state=I00ORQdhpLdhZVa5mliUexwkWFevHV0Z8Xuh7gaps0E%3D
        '400':
          description: User error (invalid request etc).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
  /logout/init:
    get:
      summary: Logout provider for Ory Hydra.
      operationId: logoutInit
      parameters:
        - in: query
          name: logout_challenge
          description: ID of Ory Hydra's logout request.
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{32}$'
            minLength: 32
            maxLength: 32
            example: '824113da6da44889943b98715a06d699'
      responses:
        # TODO 200
        # TODO 302
        '400':
          description: User error (invalid request etc).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
  /logout/endsession:
    post:
      summary: End existing session.
      operationId: logoutEndSession
      parameters:
        - in: cookie
          name: SESSION
          description: Session cookie.
          required: true
          schema:
            type: string
            pattern: '^[A-Za-z0-9]{48}$'
            minLength: 48
            maxLength: 48
            example: Nzc5ODFlZTktODhhNS00ZTEwLTk0NWQtN2EzNTU5N2E2MmY5
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              #properties:
              #  _csrf:
              #    description: CSRF token.
              #    type: string
              #    pattern: '^[a-z0-9\-]{36}$'
              #    minLength: 36
              #    maxLength: 36
              #    example: 'c316e550-23e3-4fee-8cee-f8079a630fba'
      responses:
        # TODO 302
        '400':
          description: User error (invalid request etc).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/html:
              schema:
                type: string
                example: HTML error view.
components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - timestamp
        - status
        - error
      properties:
        timestamp:
          type: string
          description: Time that the error occurred.
          example: '2020-12-22T09:09:23.463+00:00'
        status:
          type: integer
          format: int32
          description: HTTP status code.
          example: 400
        error:
          type: string
          description: Error code.
          example: USER_INPUT_OR_EXPIRED
        message:
          type: string
          description: Human readable error description.
          example: Invalid request or request has expired. Please return to service provider and try again.
        path:
          type: string
          description: URL path when the error occurred.
          example: /sample/path
