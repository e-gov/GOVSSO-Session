version: '3'
services:
  # Service subkey order: build/image, entrypoint, command, * (alphabetically)
  # Beware: https://github.com/docker-library/docs/tree/master/openjdk#environment-variables-with-periods-in-their-names
  # TODO Replace sleep with a reliable mechanism.

  dozzle: # Map to host ports 9xxx.
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '9080:8080'
    restart: unless-stopped

  clienta: # Map to host ports 11xxx.
    image: govsso-client:latest
    entrypoint: bash -c 'sleep 15 && /cnb/process/web'
    depends_on:
      - gateway
    deploy:
      resources:
        limits:
          memory: 650M
    environment:
      - server.port=11443
      - spring.application.name=Client A
      - spring.security.oauth2.client.registration.govsso.client-id=client-a
      - spring.security.oauth2.client.registration.govsso.client-secret=secreta
      - spring.security.oauth2.client.provider.govsso.issuer-uri=http://gateway.localhost:13080/
      - govsso.public-url=https://localhost:11443
      - govsso.logo=client-a.png
    ports:
      - '11443:11443'
    restart: unless-stopped

  clientb: # Map to host ports 12xxx.
    image: govsso-client:latest
    entrypoint: bash -c 'sleep 15 && /cnb/process/web'
    depends_on:
      - gateway
    deploy:
      resources:
        limits:
          memory: 650M
    environment:
      - server.port=12443
      - spring.application.name=Client B
      - spring.security.oauth2.client.registration.govsso.client-id=client-b
      - spring.security.oauth2.client.registration.govsso.client-secret=secretb
      - spring.security.oauth2.client.provider.govsso.issuer-uri=http://gateway.localhost:13080/
      - govsso.public-url=https://localhost:12443
      - govsso.logo=client-b.png
    ports:
      - '12443:12443'
    restart: unless-stopped

  gateway: # Map to host ports 13xxx.
    build: local/gateway
    depends_on:
      - hydra
      - session
    ports:
      - '13080:13080'
    networks:
      default:
        aliases:
          - gateway.localhost
    volumes:
      - ./local/gateway/nginx.conf:/etc/nginx/nginx.conf:ro

  hydra: # Map to host ports 14xxx.
    # TODO Temporarily a fork is used until all pull requests are merged upstream.
    image: oryd/hydra:feature-govsso # hydra:v1.10.7 image doesn't have shell, -sqlite image does.
    entrypoint: sh -c 'sleep 7 && hydra migrate sql --read-from-env --yes && hydra serve --config /etc/hydra/hydra.yml all --dangerous-force-http'
    depends_on:
      - hydra-db
    deploy:
      resources:
        limits:
          memory: 250M
    environment:
      - DSN=postgres://hydra:changeme@hydra-db:5432/hydra-db?sslmode=disable&max_conns=20&max_idle_conns=4
      - URLS_SELF_ISSUER=http://gateway.localhost:13080/
      # Configure Ory Hydra to redirect to session-service endpoints by hostname that browser running on host machine can access ("localhost").
      - URLS_LOGIN=http://gateway.localhost:13080/login/init
      - URLS_CONSENT=http://gateway.localhost:13080/consent/init
      - URLS_LOGOUT=http://gateway.localhost:13080/logout
      - URLS_ERROR=http://gateway.localhost:13080/error
    ports:
      - '14444:4444'
      - '14445:4445'
    networks:
      default:
        aliases:
          - hydra.localhost
    ports:
      - '14444:4444'
      - '14445:4445'
    restart: unless-stopped
    volumes:
      - ./local/hydra:/etc/hydra:ro

  session: # Map to host ports 15xxx.
    # First follow README.md to build this Docker image.
    image: govsso-session:latest
    depends_on:
      - tara
    deploy:
      resources:
        limits:
          memory: 650M
    environment:
      - server.port=8080
      - govsso.hydra.base-url=http://gateway.localhost:13080/
      # Has to point to hydra ADMIN port and should ignore reverse proxy (gateway).
      - govsso.hydra.admin-url=http://hydra.localhost:4445/
      - govsso.tara.issuer-url=https://tara.localhost:16443
    ports:
      - '15000:8000'
      - '15080:8080'
    restart: unless-stopped

  setup:
    build: local/setup
    depends_on:
      - admin
    deploy:
      resources:
        limits:
          memory: 250M
    environment:
      - ADMIN_SERVICE_URL=http://admin:8080
      - ADMIN_USER=admin
      - ADMIN_PASS=admin

  tara: # Map to host ports 16xxx.
    # TODO Use specific version.
    # TODO Optimize Dockerfile (use multi-stage to exclude build environment).
    build:
      context: https://github.com/e-gov/TARA-Mock.git
      args:
        genkeys: 'true'
    deploy:
      resources:
        limits:
          memory: 250M
    networks:
      default:
        aliases:
          - tara.localhost
    ports:
      - '16443:16443'
    restart: unless-stopped
    volumes:
      - ./local/tara/config.json:/service/config.json:ro

  admin: # Map to host ports 17xxx.
    # First follow TARA2-Admin README.md to build this Docker image.
    image: tara-admin:latest
    entrypoint: bash -c 'sleep 15 && /cnb/process/web'
    depends_on:
      - admin-db
      - hydra
      - smtp
    deploy:
      resources:
        limits:
          memory: 650M
    environment:
      - spring.application.name=GOVSSO-Admin
      - tara-oidc.url=http://hydra:4445/
      - spring.datasource.url=jdbc:postgresql://admin-db:5432/admin-db
      - spring.mail.host=smtp
      - spring.mail.port=1025
      - spring.mail.username=
      - spring.mail.password=
      - spring.mail.properties.mail.smtp.auth=false
      - spring.mail.properties.mail.smtp.starttls.enable=false
      - tara.admin.sso-mode=true
      - BPL_DEBUG_ENABLED=true
      # TODO Tune memory calculator (see https://stackoverflow.com/a/67595951 for more information).
      - BPL_JVM_THREAD_COUNT=10
    ports:
      - '17000:8000'
      - '17080:8080'
    restart: unless-stopped

  smtp: # Map to host ports 18xxx.
    image: mailhog/mailhog:v1.0.1
    ports:
      - '18025:1025'
      - '18080:8025'
    restart: unless-stopped

  hydra-db: # Map to host ports 19xxx.
    image: postgres:13
    deploy:
      resources:
        limits:
          memory: 250M
    healthcheck:
      test: pg_isready -U hydra -d hydra-db
      interval: 6s
      retries: 10
    environment:
      - POSTGRES_DB=hydra-db
      - POSTGRES_USER=hydra
      - POSTGRES_PASSWORD=changeme
    ports:
      - '19432:5432'
    restart: unless-stopped
    volumes:
      - hydra-db-data:/var/lib/postgresql/data

  admin-db: # Map to host ports 20xxx.
    image: postgres:13
    deploy:
      resources:
        limits:
          memory: 250M
    environment:
      - POSTGRES_DB=admin-db
      - POSTGRES_USER=taraadmin
      - POSTGRES_PASSWORD=changeme
    ports:
      - '20432:5432'
    restart: unless-stopped
    volumes:
      - admin-db-data:/var/lib/postgresql/data

volumes:
  hydra-db-data:
  admin-db-data:
